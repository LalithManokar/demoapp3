procedure "SAP_INO"."sap.ino.db.feed::p_feed_instance_email" (
    out ot_feeds "SAP_INO"."sap.ino.db.feed::tt_feed_email"  
)
language sqlscript
sql security invoker
default schema sap_ino
as
begin
    current_datetime = SELECT CURRENT_UTCTIMESTAMP as latest FROM dummy;
    -- deactive feed which use did not follow any more, or campaign is deleted, or idea is deleted
    lt_followed_object = select created_by_id || object_type_code || object_id as id
        from "sap.ino.db.follow::t_follow";
        
    lt_deactive_feed =  select distinct deactive_feed.id from
            (
                select 
                    status.id
                from :current_datetime as date_time, "sap.ino.db.feed::t_feed_status" as status
                inner join "sap.ino.db.feed::t_feed_update" as feed 
                    on status.feed_id = feed.id
                -- inner join "sap.ino.db.notification::v_mail_notification_settings" as identity_notification
                --         on status.user_id = identity_notification.user_id    
                where 
                    status.created_at <= date_time.latest 
                    and (status.user_id || feed.object_type_code || object_id not in (select follow.id from :lt_followed_object as follow)
                        or feed.campaign_id not in  ( select id from "sap.ino.db.campaign::t_campaign" )
                        or (feed.object_type_code = 'IDEA' and feed.object_id not in ( select id from "sap.ino.db.idea::t_idea" )))
                -- or identity_notification.value <> 'active'
                
                union all
                select 
                    status.id
                from :current_datetime as date_time, "sap.ino.db.feed::t_feed_status" as status
                inner join "sap.ino.db.feed::t_feed_update" as feed 
                    on status.feed_id = feed.id
                inner join (select 
                                identity_id,setting_value,changed_at,
                                case object_type_code 
                                when 'CAMPAIGN_SETTING_VALUE' then 'CAMPAIGN' 
                                when 'IDEA_SETTING_VALUE' then 'IDEA' 
                                else 'TAG' end as CODE 
                            from "sap.ino.db.iam::t_personalize_setting" where type_code='FEEDS') as setting
                    ON status.user_id = setting.identity_id AND feed.OBJECT_TYPE_CODE = setting.CODE 
                where 
                    status.created_at <= date_time.latest 
                    and  ((setting.setting_value = 0 and feed.event_at >= setting.changed_at) 
                        or (setting.setting_value = 1 and feed.event_at <= setting.changed_at))
                    and status.mail_status_code = 'UNSENT' and status.IS_INSTANCE = 1
            ) as deactive_feed;  
         
    --sent feed to user which they have privilege to view         
    lt_identity_campaign_read = select identity_id || campaign_id as id 
    from "sap.ino.db.campaign::v_identity_campaign_read";
    
    lt_feeds = select 
                    status.id,
                    status.feed_id,
                    object_id, 
                    object_type_code,
                    event_at,  
                    feed_code,
                    case 
                    when settings.IS_ANONYMOUS = 'true' and settings.CREATED_BY_ID = actor_id then  cast(0 as INTEGER) 
                    else actor_id
                    end as actor_id, 
                     case 
                    when settings.IS_ANONYMOUS = 'true' and settings.CREATED_BY_ID = actor_id  then  cast('Anonymity' as VARCHAR) 
                    else  actor_name
                    end as actor_name, 
                    object_text,
                    content as sub_text, 
                    involved_id,
                    involved_obj_type_code,
                    involved_obj_text,
                    campaign_id, 
                    campaign_date,
                    field1_name,
                    field1_text,
                    field1_value,
                    field1_value_option,
                    field2_name,
                    field2_text,
                    field2_value,
                    field2_value_option,
                    filter_type_code,
                    status.user_id as followed_by_id
                from :current_datetime as date_time, "sap.ino.db.feed::t_feed_status" as status
                inner join "sap.ino.db.feed::t_feed_update" as feed
                    on status.feed_id = feed.id
                 left outer join "sap.ino.db.idea::v_email_idea_isAnonymous" as settings 
                 on settings.id = status.id 
                where 
                    status.created_at <= date_time.latest 
                    and status.mail_status_code = 'UNSENT'
                    and status.user_id || feed.campaign_id in (select auth_read.id from :lt_identity_campaign_read as auth_read)
                    and status.IS_INSTANCE = 1
                    and status.id not in (select deactive_feeds.id from :lt_deactive_feed as deactive_feeds);
                    
    --update feed that will not be sent
    update status
    set
        status.mail_status_code = 'DEACTIVATED', status.CHANGED_AT = CURRENT_UTCTIMESTAMP
    from "sap.ino.db.feed::t_feed_status" as status,:current_datetime as date_time
    where status.created_at <= date_time.latest 
        and status.id not in (select id from :lt_feeds) 
        and status.mail_status_code = 'UNSENT' 
        and status.IS_INSTANCE = 1;                
               
    ot_feeds = select TOP 100000 feeds.* , locale.locale, identity.name,
                identity.email,
                identity.is_external
                from :lt_feeds as feeds
                inner join
                "sap.ino.db.iam::t_identity" as identity
                on 
                    feeds.followed_by_id = identity.id
                left outer join
                "sap.ino.db.basis::v_user_locale" as locale
                on 
                locale.user_id = feeds.followed_by_id
                order by feeds.followed_by_id, feeds.event_at;
	end;