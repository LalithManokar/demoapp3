//@ui5-bundle sap/ndc/library-preload.js
/*!
 * SAPUI5
 * (c) Copyright 2009-2022 SAP SE. All rights reserved.
 */
sap.ui.predefine('sap/ndc/BarcodeScannerButton',['./BarcodeScanner','./BarcodeScannerButtonRenderer','./library','sap/m/Button','sap/ui/core/Control','sap/ui/model/resource/ResourceModel'],function(B,a,l,b,C,R){"use strict";
var c=C.extend("sap.ndc.BarcodeScannerButton",{
metadata:{library:"sap.ndc",properties:{provideFallback:{type:"boolean",defaultValue:true},visible:{type:"boolean",defaultValue:true},width:{type:"sap.ui.core.CSSSize",defaultValue:null},dialogTitle:{type:"string",defaultValue:null},preferFrontCamera:{type:"boolean",defaultValue:false},frameRate:{type:"float"},zoom:{type:"float"},keepCameraScan:{type:"boolean",defaultValue:false},disableBarcodeInputDialog:{type:"boolean",defaultValue:false}},aggregations:{_btn:{type:"sap.m.Button",multiple:false,visibility:"hidden"}},events:{scanSuccess:{parameters:{text:{type:"string"},format:{type:"string"},cancelled:{type:"boolean"}}},scanFail:{},inputLiveUpdate:{parameters:{newValue:{type:"string"}}}}},
renderer:a
});
var r;
c.prototype.init=function(){r=new R({bundleName:"sap.ndc.messagebundle"});this.setAggregation("_btn",new b({icon:"sap-icon://bar-code",tooltip:r.getProperty("BARCODE_SCANNER_BUTTON_TOOLTIP"),press:this._onBtnPressed.bind(this),width:"100%"}));var o=B.getStatusModel();this.setModel(o,"status");};
c.prototype._onBtnPressed=function(e){B.scan(this._onScanSuccess.bind(this),this._onScanFail.bind(this),this._onInputLiveUpdate.bind(this),this.getProperty("dialogTitle"),this.getProperty("preferFrontCamera"),this.getProperty("frameRate"),this.getProperty("zoom"),this.getProperty("keepCameraScan"),this.getProperty("disableBarcodeInputDialog"));};
c.prototype._onScanSuccess=function(A){this.fireScanSuccess(A);};
c.prototype._onScanFail=function(A){this.fireScanFail(A);};
c.prototype._onInputLiveUpdate=function(A){this.fireInputLiveUpdate(A);};
c.prototype.setProvideFallback=function(f){var v=this.getProvideFallback();var o;f=!!f;if(v!==f){this.setProperty("provideFallback",f);o=this.getAggregation("_btn");if(f){o.unbindProperty("visible");o.setVisible(true);}else{o.bindProperty("visible","status>/available");}}return this;};
return c;});
sap.ui.predefine('sap/ndc/BarcodeScannerButtonRenderer',[],function(){"use strict";var B={};
B.render=function(r,c){if(!c.getVisible()){return;}r.write("<span");r.writeControlData(c);r.addStyle("display","inline-block");r.addStyle("width",c.getWidth());r.writeStyles();r.write(">");r.renderControl(c.getAggregation("_btn"));r.write("</span>");};
return B;},true);
sap.ui.predefine('sap/ndc/BarcodeScannerUIContainer',["sap/ui/core/Control"],function(C){"use strict";
var B=C.extend("sap.ndc.BarcodeScannerUIContainer",{
metadata:{properties:{"prefixId":"string"}},
renderer:{apiVersion:2,render:function(r,c){r.openStart("div",c);r.class("sapNdcRTCDialogVideo");r.openEnd();r.openStart("video",c.getId()+"-video");r.attr("autoplay","autoplay");r.attr("webkit-playsinline","webkit-playsinline");r.attr("playsinline","playsinline");r.class("sapNdcRTCDialogVideoContainer");r.openEnd();r.close("video");r.close("div");r.openStart("div",c.getId()+"-overlay");r.class("sapNdcRTCDialogOverlay");r.openEnd();r.openStart("div",c.getId()+"-overlay-box");r.class("sapNdcRTCDialogOverlayBox");r.openEnd();r.openStart("div",c.getId()+"-overlay-line");r.class("sapNdcRTCDialogOverlayLine");r.openEnd();r.close("div");r.close("div");r.close("div");r.openStart("div",c.getId()+"-highlight");r.attr("hidden",true);r.class("sapNdcRTCDialogHighlight");r.openEnd();r.close("div");}}
});
return B;});
sap.ui.predefine('sap/ndc/library',['sap/m/library','sap/ui/core/library'],function(l,a){"use strict";sap.ui.getCore().initLibrary({name:"sap.ndc",dependencies:["sap.ui.core","sap.m"],types:[],interfaces:[],controls:["sap.ndc.BarcodeScannerButton"],elements:[],noLibraryCSS:true,version:"1.71.61"});return sap.ndc;});
sap.ui.require.preload({
	"sap/ndc/manifest.json":'{"_version":"1.9.0","sap.app":{"id":"sap.ndc","type":"library","embeds":[],"applicationVersion":{"version":"1.71.61"},"title":"SAPUI5 library with controls with native device capabilities.","description":"SAPUI5 library with controls with native device capabilities.","ach":"MOB-SDK-UI5","resources":"resources.json","offline":true,"openSourceComponents":[{"name":"zxing-cpp/zxing-cpp","packagedWithMySelf":true,"version":"2.1.0"}]},"sap.ui":{"technology":"UI5","supportedThemes":[]},"sap.ui5":{"dependencies":{"minUI5Version":"1.71","libs":{"sap.ui.core":{"minVersion":"1.71.61"},"sap.m":{"minVersion":"1.71.61"}}},"library":{"i18n":"messagebundle.properties","css":false,"content":{"controls":["sap.ndc.BarcodeScannerButton"],"elements":[],"types":[],"interfaces":[]}}}}',
	"sap/ndc/BarcodeScanner.js":function(){sap.ui.loader.config({shim:{'sap/ndc/thirdparty/zxingcpp/zxing_reader':{amd:true,exports:'ZXing'}}});sap.ui.define(["sap/base/Log",'sap/ui/model/json/JSONModel',"sap/ui/model/BindingMode",'sap/ui/model/resource/ResourceModel','sap/m/Input','sap/m/Label','sap/m/Button','sap/m/Dialog','sap/m/BusyDialog',"sap/ui/dom/includeStylesheet","./BarcodeScannerUIContainer","sap/m/MessageToast",'sap/m/library',"sap/ui/base/Event","sap/ui/base/EventProvider",'sap/ui/Device',"sap/ui/thirdparty/jquery","sap/base/util/deepClone"],function(L,J,B,R,I,a,b,D,c,d,f,M,m,E,g,h,q,j){"use strict";document.addEventListener("settingsDone",d1);document.addEventListener("SettingCompleted",d1);document.addEventListener("mockSettingsDone",d1);d({url:sap.ui.require.toUrl("sap/ndc/css/sapNdcBarcodeScanner.css")});var k={},s,S,o,v,l,n,p,r,t={Initial:"Initial",Loading:"Loading",Available:"Available",UnAvailable:"UnAvailable"},u=new J({scannerAPI:"unknown",available:false,config:{defaultConstraints:{audio:false,video:{facingMode:'environment'}},deviceId:undefined,preferFrontCamera:false,enableGS1Header:false},scanDialog:{title:"",onLiveUpdate:null,barcodeOverlaySetup:false,isNoScanner:false,scanningStartTime:0,keepCameraScan:false,disableBarcodeInputDialog:false},callBackHandler:{onFnFail:null,onFnSuccess:null,callBackFromSetPhysicalScan:false},devices:{mainCamera:undefined,needCheck:true,all:[],front:[],back:[]},apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",description:"Zebra Enterprise Browser",status:t.Initial,enableBarcodeState:"init",enableZebraBarcodeRetryCount:6},Cordova:{key:"Cordova",description:"Cordova",status:t.Initial,scannerAPI:null},ZXingCPP:{key:"ZXingCPP",description:"WebAssembly build (using Emcripten) of zxing-cpp",status:t.Initial,instance:null,scannerAPI:null}},bReady:true}),w=new J({scannerAPI:"unknown",available:false,deviceId:undefined,devices:[],apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",status:t.Initial},Cordova:{key:"Cordova",status:t.Initial},ZXingCPP:{key:"ZXingCPP",status:t.Initial}}}).setDefaultBindingMode(B.OneWay),x=new R({bundleName:"sap.ndc.messagebundle"});
function y(e){return u.getProperty("/apis/"+e+"/");}
function z(e,i,v1){if(!e||!y(e)){L.error("BarcodeScanner.updateScannerAPI: scanner API '"+e+"' is not a valid status code, stop update scanner API. Please check!");return;}var w1="/apis/"+e+"/";if(i){if(t[i]){u.setProperty(w1+"status",i);w.setProperty(w1+"status",i);}else{L.error("BarcodeScanner.updateScannerAPI: scanner API status '"+i+"' is not a valid status code, please check!");}}if(typeof v1==="boolean"&&v1){u.setProperty("/scannerAPI",e);w.setProperty("/scannerAPI",e);}u.checkUpdate(true);w.checkUpdate(true);}
function A(e,i){z(e,t.Available,i);}
function C(e){u.setProperty("/apis/"+e+"/instance",null);u.setProperty("/apis/"+e+"/scannerAPI",null);z(e,t.UnAvailable);}
function F(){return u.getProperty("/scannerAPI");}
function G(e){if(e==="unknown"){u.setProperty("/scannerAPI",e);w.setProperty("/scannerAPI",e);}else{z(e,undefined,true);}}
function H(e,i){if(!e||!y(e)){L.error("BarcodeScanner.checkScannerAPIStatus: scanner API '"+e+"' doesn't exist. Please check!");return false;}var v1=u.getProperty("/apis/"+e+"/status");return i===v1;}
function K(e){return H(e,t.Available);}
function N(e){return H(e,t.UnAvailable);}
function O(){u.setProperty("/available",false);w.setProperty("/available",false);C("ZXingCPP");L.debug("BarcodeScanner.disableFeatureAPIs: Set status of Feature scanner APIs (ZXingCPP) to unavailable!");}
function P(){try{var i=cordova.plugins.barcodeScanner;if(i){u.setProperty("/apis/Cordova/scannerAPI",i);A("Cordova");if(F()==="unknown"){G("Cordova");}L.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is available!");O();}else{L.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");C("Cordova");Q();}}catch(e){L.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");C("Cordova");Q();}}
function Q(){q(document).ready(function(){if(X()){Y();}});U();}
function T(e){L.error(e);L.warning("BarcodeScanner.loadZXingCPPFailed: no feature scanner API available now.");O();u.checkUpdate(true);}
function U(){L.debug("BarcodeScanner.loadZXingCPPAPI: load ZXingCPP API");z("ZXingCPP",t.Loading);sap.ui.require(["sap/ndc/thirdparty/zxingcpp/zxing_reader"],function(e){u.setProperty("/apis/ZXingCPP/instance",e);if(F()==="unknown"){G("ZXingCPP");}L.debug("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is Initial!");z("ZXingCPP",t.Initial);},function(e){T("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is unavailable.\n"+e);});}
function V(e,i){var v1=new c({title:x.getProperty("BARCODE_DIALOG_BUSY_TITLE"),text:x.getProperty("BARCODE_DIALOG_BUSY_TEXT_ZXINGCPP")});v1.open();z("ZXingCPP",t.Loading);var w1={"locateFile":function(y1,z1){return W(y1,z1,"zxingcpp");}};var x1=u.getProperty("/apis/ZXingCPP/instance");x1(w1).then(function(y1){u.setProperty("/apis/ZXingCPP/scannerAPI",y1);L.debug("BarcodeScanner.loadZXingCPPInstance: wasm lib instance of ZXingCPP is available!");A("ZXingCPP");if(F()==="unknown"){G("ZXingCPP");}L.debug("BarcodeScanner.loadZXingCPPInstance: ZXingCPP API is available!");v1.close();e();},function(y1){T("BarcodeScanner.loadZXingCPPInstance: can not load wasm lib instance of ZXingCPP.\n"+y1);v1.close();i();});}
function W(e,i,v1){if(!i||i===""){return sap.ui.require.toUrl("sap/ndc/thirdparty/"+v1+"/")+e;}return i+e;}
function X(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.enumerateDevices);}
function Y(){L.debug("BarcodeScanner.getDeviceCameras: start to get device cameras");window.navigator.mediaDevices.enumerateDevices().then(function(e){var i=u.getProperty("/devices");var v1=0;e.forEach(function(w1){if(w1.kind==="videoinput"){v1++;var x1={"deviceId":w1.deviceId,"groupId":w1.groupId,"kind":w1.kind,"label":w1.label};if(x1.label&&x1.label!==""){if(x1.label.indexOf('0, facing back')>0){L.debug("BarcodeScanner.getDeviceCameras: has a camera with label contains '0, facing back', set it as main camera.");i.needCheck=false;i.mainCamera=x1;}if(x1.label.indexOf('back')>0){i.back.push(x1);}else if(x1.label.indexOf('front')>0){i.front.push(x1);}}else{x1.label="Camera "+v1;}i.all.push(x1);}});if(!i.mainCamera){if(i.back.length===1){L.debug("BarcodeScanner.getDeviceCameras: has only one camera which label contains 'back', set it as main camera.");i.mainCamera=j(i.back[0]);i.needCheck=false;}else if(i.all.length===1){L.debug("BarcodeScanner.getDeviceCameras: has only one camera, set it as main camera.");i.mainCamera=j(i.all[0]);i.needCheck=false;}}u.setProperty("/devices",i);$();}).catch(function(e){u.setProperty("/devices/needCheck",false);L.error("BarcodeScanner.getDeviceCameras: Can not get device cameras.\nError Message: "+e);});}
function Z(e,i){var v1=j(e);var w1=function(){if(v1.length===0){u.setProperty("/devices/needCheck",false);$();L.debug("BarcodeScanner.findMainCamera: can not find the main camera.");i();}else{var x1=v1[v1.length-1];var y1=j(u.getProperty("/config/defaultConstraints"));y1.video.deviceId={exact:x1.deviceId};var z1=q1();y1.video=Object.assign(y1.video,z1);window.navigator.mediaDevices.getUserMedia(y1).then(function(A1){var B1=typeof A1.stop==="function"?A1:A1.getTracks()[0];_(B1).then(function(){x1.flashLight=true;u.setProperty("/devices/mainCamera",x1);u.setProperty("/devices/needCheck",false);$();L.debug("BarcodeScanner.findMainCamera: the main camera is "+x1.deviceId);s=A1;if(s){l1();}else{S.getModel().setProperty("/isNoScanner",true);e1(x.getResourceBundle().getText('BARCODE_DIALOG_CAMERA_STREAM_ERROR_MSG'));}},function(){B1.stop();L.debug("BarcodeScanner.findMainCamera: "+x1.deviceId+" is not the main camera, check the next camera");v1.pop();w1();});}).catch(function(A1){L.debug("BarcodeScanner.findMainCamera: getUserMedia() failed.\nError Message: "+A1);if(u.getProperty("/config/defaultConstraints/video/zoom")!==undefined){L.debug("BarcodeScanner.findMainCamera: getUserMedia() failed maybe caused by unsupported constraint 'zoom', delete it and try again.");delete u.getProperty("/config/defaultConstraints/video").zoom;}else{v1.pop();}w1();});}};w1();}
function $(){L.debug("BarcodeScanner.updateDevicesInStatusModel: update the devices in status model");var e=j(u.getProperty("/devices/all"));w.setProperty("/devices",e);}
function _(e){if(!("ImageCapture"in window)){return new Promise(function(v1,w1){L.debug("BarcodeScanner.checkFlashLight: Device does not support image capture");w1();});}else if(!e){return new Promise(function(v1,w1){L.debug("BarcodeScanner.checkFlashLight: Camera is not opened");w1();});}else{var i=new ImageCapture(e);return new Promise(function(v1,w1){i.getPhotoCapabilities().then(function(x1){if(x1.fillLightMode&&x1.fillLightMode.includes("flash")){L.debug("BarcodeScanner.checkFlashLight: Camera does support flash light");v1();}else{L.debug("BarcodeScanner.checkFlashLight: Camera doesn't support flash light");w1();}}).catch(function(x1){L.debug("BarcodeScanner.checkFlashLight: Camera not started or not available.\nError Message: "+x1);w1();});});}}
function a1(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.getUserMedia);}
function b1(){try{if(self!=top&&typeof cordova==="undefined"){window.cordova=top.cordova;}}catch(e){L.info("BarcodeScanner.checkCordovaInIframe: cordova is unavailable in cross-origin iframe");}}
function c1(){try{if(self!=top&&(typeof EB==="undefined"||typeof window.Rho==="undefined")){if(typeof top.EB!=="undefined"||typeof top.Rho!=="undefined"){window.EB=top.EB;window.Rho=top.Rho;}}if(typeof EB!=="undefined"&&typeof EB.Barcode!=="undefined"){A("ZebraEnterpriseBrowser",true);L.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is available!");}else{C("ZebraEnterpriseBrowser");L.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is unavailable!");}}catch(e){L.info("BarcodeScanner.initZebraEB: EB and Rho are unavailable");}}
function d1(){b1();u.setProperty("/available",true);w.setProperty("/available",true);if(h.os.android){q(document).ready(function(){c1();t1();});}else{C("ZebraEnterpriseBrowser");L.debug("BarcodeScanner.init: Not Android device, Zebra Enterprise Browser plugin is unavailable!");}if(sap.Settings&&typeof sap.Settings.isFeatureEnabled==="function"){sap.Settings.isFeatureEnabled("cordova.plugins.barcodeScanner",function(e){if(e){P();}else{O();L.warning("BarcodeScanner.init: Feature disabled in sap.Settings");P();}},function(){L.warning("BarcodeScanner.init: Feature check failed");P();});}else{if(sap.Settings===undefined){L.debug("BarcodeScanner.init: No sap.Settings. No feature vector available.");}else{L.warning("BarcodeScanner.init: Feature vector (sap.Settings.isFeatureEnabled) is unavailable");}P();}}
function e1(e){if(e){L.warning("BarcodeScanner.openBarcodeInputDialog: isNoScanner. Message: "+e);var i=x.getResourceBundle().getText('BARCODE_DIALOG_CAMERA_OTHER_ERROR_MSG',e);if(e.name){var v1="BARCODE_DIALOG_CAMERA_"+e.name.toUpperCase()+"_ERROR_MSG";i=x.getResourceBundle().getText(v1);}M.show(i,{duration:1000});}var w1=u.getProperty("/scanDialog/disableBarcodeInputDialog");if(w1){k.closeScanDialog();}else{S.destroyContent();S.setTitle('');S.setStretch(false);S.setContentHeight('auto');if(p){p.hidden=true;}S.removeStyleClass('sapUiNoContentPadding');S.setTitle(u.getProperty("/scanDialog/title"));var x1=new a(S.getId()+'-txt_barcode',{text:"{i18n>BARCODE_DIALOG_MSG}",visible:"{/isNoScanner}"});S.addContent(x1);var y1=new I(S.getId()+'-inp_barcode',{value:"{/barcode}",valueLiveUpdate:true,ariaLabelledBy:x1.getId(),liveChange:function(A1){var B1=u.getProperty("/scanDialog/onLiveUpdate");if(typeof B1==="function"){B1({newValue:A1.getParameter("newValue")});}},placeholder:"{i18n>BARCODE_DIALOG_PLACEHOLDER}"});S.addContent(y1);var z1=m.ButtonType;S.setBeginButton(new b(S.getId()+'-btn_barcode_ok',{type:z1.Emphasized,text:"{i18n>BARCODE_DIALOG_OK}",press:function(A1){var B1=u.getProperty("/callBackHandler/onFnSuccess");if(typeof B1==="function"){var C1="unknown";if(u.getProperty("/scanDialog/scanningStartTime")>0){var D1=Date.now();C1=D1-u.getProperty("/scanDialog/scanningStartTime");}B1({text:S.getModel().getProperty("/barcode"),scanningTime:C1,cancelled:false});}k.closeScanDialog();}}));S.setEndButton(new b({text:"{i18n>BARCODE_DIALOG_CANCEL}",press:function(){k.closeScanDialog();}}));S.setBusy(false);}}
function f1(){if(!u.getProperty("/config/preferFrontCamera")){delete u.getProperty("/config/defaultConstraints/video").facingMode;var e=u.getProperty("/devices");if(!u.getProperty("/config/deviceId")&&!e.mainCamera&&!h.os.ios&&!h.os.macintosh&&e.needCheck&&e.all.length>1){var i=e.back.length>1?e.back:e.all;var v1=e.back.length>1?"back":"all";L.debug("BarcodeScanner.openCorrectCamera: start to find the main camera in "+v1+" camera list.");Z(i,g1);return;}}g1();}
function g1(e){L.debug("BarcodeScanner.openCamera: start to open camera");if(u.getProperty("/config/deviceId")){delete u.getProperty("/config/defaultConstraints/video").facingMode;u.setProperty("/config/defaultConstraints/video/deviceId",{exact:u.getProperty("/config/deviceId")});}else if(u.getProperty("/config/preferFrontCamera")){u.setProperty("/config/defaultConstraints/video/facingMode","user");delete u.getProperty("/config/defaultConstraints/video").deviceId;}else{var i=u.getProperty("/devices");if(i.mainCamera&&i.mainCamera.deviceId!==""){u.setProperty("/config/defaultConstraints/video/deviceId",{exact:i.mainCamera.deviceId});}else{u.setProperty("/config/defaultConstraints/video/facingMode","environment");}}var v1=j(u.getProperty("/config/defaultConstraints"));var w1=q1();v1.video=Object.assign(v1.video,w1);window.navigator.mediaDevices.getUserMedia(v1).then(function(x1){s=x1;if(s){l1(e);}else{u.setProperty("/scanDialog/isNoScanner",true);e1(x.getResourceBundle().getText('BARCODE_DIALOG_CAMERA_STREAM_ERROR_MSG'));}}).catch(function(x1){L.debug("BarcodeScanner.openCamera: getUserMedia() failed.\nError Message: "+x1);if(u.getProperty("/config/defaultConstraints/video/zoom")!==undefined){L.debug("BarcodeScanner.openCamera: getUserMedia() failed maybe caused by unsupported constraint 'zoom', delete it and try again.");delete u.getProperty("/config/defaultConstraints/video").zoom;g1();}else{u.setProperty("/scanDialog/isNoScanner",true);e1(x1);}});}
function h1(){u.checkUpdate(true);var e;if(!S||(S&&S.getContent().length===0)){e=new J();S=new D('sapNdcBarcodeScannerDialog',{icon:'sap-icon://bar-code',title:x.getProperty("BARCODE_DIALOG_SCANNING_TITLE"),stretch:true,horizontalScrolling:false,verticalScrolling:false,endButton:new b({text:"{i18n>BARCODE_DIALOG_CANCEL}",enabled:false,press:function(){S.getModel().setProperty("/isNoScanner",false);s1();e1();}}),afterClose:function(){s1();if(S){S.destroyContent();S.destroy();}S=null;}});S.setEscapeHandler(function(i){k.closeScanDialog();var v1=u.getProperty("/callBackHandler/onFnSuccess");if(typeof v1==="function"){v1({text:e.getProperty("/barcode"),cancelled:true});}i.resolve();});S.setModel(e);S.setModel(x,"i18n");}S.addStyleClass('sapUiNoContentPadding');S.setBusy(true);if(K("ZXingCPP")&&a1()){S.attachAfterOpen(function(){f1();});S.destroyContent();r=undefined;p=undefined;l=undefined;n=undefined;o=new f();S.addContent(o);S.setContentWidth('100%');S.setContentHeight('100%');u.setProperty("/scanDialog/barcodeOverlaySetup",false);}else{if(u.getProperty("/available")){u.setProperty("/scanDialog/isNoScanner",false);}else{u.setProperty("/scanDialog/isNoScanner",true);}e1();}S.open();}
function i1(){u.setProperty("/bReady",true);u.setProperty("/callBackHandler/callBackFromSetPhysicalScan",false);EB.Barcode.triggerType=EB.Barcode.SOFT_ONCE;EB.Barcode.start();}
function j1(){var e;if(u.getProperty("/config/preferFrontCamera")){e={preferFrontCamera:true};}u.getProperty("/apis/Cordova/scannerAPI").scan(function(i){if(i.cancelled==="false"||!i.cancelled){i.cancelled=false;var v1=u.getProperty("/callBackHandler/onFnSuccess");if(typeof v1==="function"){v1(i);}}else{h1();}u.setProperty("/bReady",true);},function(i){L.error("BarcodeScanner.scanWithCordova: Barcode scanning failed.");u.setProperty("/bReady",true);var v1=u.getProperty("/callBackHandler/onFnFail");if(typeof v1==="function"){if(typeof i==="string"){var w1=i;i={"text":w1};L.debug("BarcodeScanner.scanWithCordova: Change the type of oEvent from string to object");}v1(i);}},e);}
function k1(){if(H("ZXingCPP",t.Initial)){L.debug("BarcodeScanner.scanWithZXingCPP: ZXingCPP instances is not loaded, start to load them.");V(function(){h1();},function(){if(K("ZebraEnterpriseBrowser")){G("ZebraEnterpriseBrowser");L.debug("BarcodeScanner.scanWithZXingCPP: Zebra is available, set the current scanner API to Zebra.");}else{G("unknown");L.warning("BarcodeScanner.scanWithZXingCPP: Zebra is unavailable too, set the current scanner API to unknown.");}h1();});}else{L.debug("BarcodeScanner.scanWithZXingCPP: get scan dialog.");h1();}}
function l1(e){S.getEndButton().setEnabled(true);S.setBusy(false);if(!r){r=o.getDomRef('highlight');}if(!l){l=o?o.getDomRef('video'):undefined;}try{l.srcObject=s;l.play().then(function(){r1();if(h.support.orientation&&e!==false){h.orientation.attachHandler(p1);}L.debug("BarcodeScanner.playbackVideoAndDecode: video screen size "+l.videoHeight+"X"+l.videoWidth);v=typeof s.stop==="function"?s:s.getTracks()[0];var v1=v.getSettings();L.debug("BarcodeScanner.playbackVideoAndDecode: video screen frameRate is "+v1.frameRate+", zoom is "+v1.zoom);m1();});}catch(i){L.debug("BarcodeScanner.playbackVideoAndDecode is failed. error: "+i);}}
function m1(){L.debug("BarcodeScanner.decodeWithZXingCPP: start to decode");if(!l||!l.srcObject){L.debug("BarcodeScanner.decodeWithZXingCPP: video dom doesn't exist, stop decoding");return;}try{if(!n){n=o?document.createElement("canvas"):undefined;}if(!n){L.debug("BarcodeScanner.decodeWithZXingCPP: canvas dom doesn't exist, stop decoding");return;}var e=n.getContext("2d",{willReadFrequently:true});var i=l.videoWidth;var v1=l.videoHeight;n.width=i;n.height=v1;e.drawImage(l,0,0,i,v1);var w1=e.getImageData(0,0,i,v1);var x1=w1.data;var y1;var z1=u.getProperty("/apis/ZXingCPP/scannerAPI");try{y1=z1._malloc(x1.length);z1.HEAPU8.set(x1,y1);}catch(A1){L.error("BarcodeScanner.decodeWithZXingCPP: zxing.HEAPU8 error: "+A1);}var B1=z1.readBarcodesFromPixmap(y1,i,v1,true,"",1);z1._free(y1);var C1=B1.size();if(C1>0&&B1.get(0).format){L.debug("BarcodeScanner.decodeWithZXingCPP: decode successful");var D1=B1.get(0);n1(D1);if(D1.cancelled==="false"||!D1.cancelled){D1.cancelled=false;var E1=u.getProperty("/callBackHandler/onFnSuccess");if(typeof E1==="function"){D1.scanningTime="unknown";if(u.getProperty("/scanDialog/scanningStartTime")>0){var F1=Date.now();D1.scanningTime=F1-u.getProperty("/scanDialog/scanningStartTime");}if(u.getProperty("/config/enableGS1Header")){D1.text=D1.symbologyIdentifier+D1.text;}E1(D1);}k.closeScanDialog();}}else{if(r&&u.getProperty("/scanDialog/barcodeOverlaySetup")){o1();}setTimeout(m1,0);}}catch(A1){}}
function n1(e){var v1,w1,x1;var y1=0,z1=0,A1=0,B1=0,i;if(r&&!u.getProperty("/scanDialog/barcodeOverlaySetup")){r.innerHTML='';u.setProperty("/scanDialog/barcodeOverlaySetup",true);}if(r){w1=l.clientWidth/l.videoWidth;x1=l.clientHeight/l.videoHeight;if(e.position){e.resultPoints=[e.position.topLeft,e.position.topRight,e.position.bottomRight,e.position.bottomLeft];}if(e.resultPoints){A1=e.resultPoints[0].y;B1=e.resultPoints[0].x;z1=e.resultPoints[0].x;y1=e.resultPoints[0].y;for(i=0;i<e.resultPoints.length;i++){v1=e.resultPoints[i];if(v1.x<B1&&v1.x<z1){B1=v1.x;}else if(v1.x>B1&&v1.x>z1){z1=v1.x;}if(v1.y<A1&&v1.y<y1){A1=v1.y;}else if(v1.y>A1&&v1.y>y1){y1=v1.y;}}}r.hidden=false;r.style.top=A1*x1+'px';r.style.left=B1*w1+'px';r.style.width=(z1-B1>0?(z1-B1)*w1:5)+'px';r.style.height=(y1-A1>0?(y1-A1)*x1:5)+'px';}}
function o1(){r.hidden=true;r.style.top='0';r.style.left='0';r.style.width='0';r.style.height='0';}
function p1(e){S.setBusy(true);var i=e.landscape?"landscape":"portrait";L.debug("BarcodeScanner.orientationChangeListener: device orientation changed to "+i+", call openCamera again to resize");if(p){p.hidden=true;}s1(false);if(h.os.ios||h.os.macintosh){S._positionDialog();}setTimeout(function(){g1(false);},500);}
function q1(){var i=o.getDomRef().clientHeight,e=o.getDomRef().clientWidth,v1=1920,w1=1440;if(i>e){w1=Math.trunc(1920*e/i);}else{w1=Math.trunc(1920*i/e);}return{width:{ideal:v1},height:{ideal:w1}};}
function r1(){L.debug("BarcodeScanner.scanFrame: start to set up overlay dom");if(!S||!l||!l.videoHeight||!l.videoWidth){L.debug("BarcodeScanner.scanFrame: scan dialog or video screen is closed, stop set up");return;}var i=0.15;if(!p&&o){p=o.getDomRef('overlay');}if(p){p.hidden=false;var e=l.clientWidth,v1=l.clientHeight;var w1=e*(1-2*i);var x1=v1*(1-2*i);if(w1<=x1){x1=w1*(1-2*i);}var y1=o.getDomRef('overlay-box');if(y1){y1.style.width=w1+'px';y1.style.height=x1+'px';p.style.width=w1+'px';p.style.height=x1+'px';p.style.borderWidth=(v1-x1)/2+'px '+(e-w1)/2+'px';}}}
function s1(e){if(v){v.stop();v=undefined;}if(s){s=undefined;}if(h.support.orientation&&e!==false){h.orientation.detachHandler(p1);}if(l&&l.srcObject){l.srcObject=undefined;}}
function t1(){u.checkUpdate(true);var e=u.getProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount");var i=u.getProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState");if(F()==="ZebraEnterpriseBrowser"&&K("ZebraEnterpriseBrowser")&&i!==true){var v1=function(w1){if(w1['data']==""||w1['time']==""){var x1=u.getProperty("/callBackHandler/onFnFail");if(typeof x1==="function"){var y1={text:"Zebra Scan failed",resultStatus:"Error"};if(u.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){y1=new E('scanFailEvent',new g(),y1);}x1(y1);}L.error("BarcodeScanner.zebraEBScanEnable: Zebra Enterprise Browser Scan Failed");}else{L.debug("BarcodeScanner.zebraEBScanEnable: Zebra EB Scan Result: "+w1.data+"; Scan Json: "+JSON.stringify(w1));var z1=u.getProperty("/callBackHandler/onFnSuccess");if(typeof z1==="function"){var A1="unknown";if(u.getProperty("/scanDialog/scanningStartTime")>0){var B1=Date.now();A1=B1-u.getProperty("/scanDialog/scanningStartTime");}var C1={text:w1.data,format:w1.source,resultStatus:"Success",scanningTime:A1,cancelled:false};if(u.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){C1=new E('scanSuccessEvent',new g(),C1);}z1(C1);u.setProperty("/scanDialog/scanningStartTime",0);}}};if(u.getProperty("/config/enableGS1Header")){EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_AIM;}else{EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_NONE;}EB.Barcode.enable({},v1);u.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",true);L.debug("BarcodeScanner.zebraEBScanEnable: try to enable EB Barcode in ("+(6-e)+") times");}else if(e>1&&i==='init'){e--;u.setProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount",e);c1();setTimeout(t1,500);}else{L.debug("BarcodeScanner.zebraEBScanEnable: The scanner API is not ZebraEnterpriseBrowser or cannot been enabled.");}}
function u1(){var e=u.getProperty("/scanDialog/keepCameraScan");var i=false;if(F()==="ZebraEnterpriseBrowser"&&K("ZebraEnterpriseBrowser")&&(!e||typeof e!=='boolean')){i=true;}return i;}
k.scan=function(e,i,v1,w1,x1,y1,z1,A1,B1){if(!u.getProperty("/bReady")){L.error("BarcodeScanner.scan: Barcode scanning is already in progress.");return;}L.debug("BarcodeScanner.scan: start to scan barcode.");u.setProperty("/bReady",false);if(typeof e==='function'){u.setProperty("/callBackHandler/onFnSuccess",e);}else{u.setProperty("/callBackHandler/onFnSuccess",null);}if(typeof i==='function'){u.setProperty("/callBackHandler/onFnFail",i);}else{u.setProperty("/callBackHandler/onFnFail",null);}if(typeof v1==='function'){u.setProperty("/scanDialog/onLiveUpdate",v1);}else{u.setProperty("/scanDialog/onLiveUpdate",null);}if(typeof w1==="string"&&w1!=null&&w1.trim()!=""){u.setProperty("/scanDialog/title",w1);}else{u.setProperty("/scanDialog/title",x.getProperty("BARCODE_DIALOG_TITLE"));}u.setProperty("/scanDialog/scanningStartTime",Date.now());u.setProperty("/config/preferFrontCamera",x1);if(u.getProperty("/config/defaultConstraints/video/frameRate")!==undefined){delete u.getProperty("/config/defaultConstraints/video").frameRate;}if(typeof y1==="number"&&y1>0){u.setProperty("/config/defaultConstraints/video/frameRate",y1);}else if(typeof y1!=='undefined'){M.show(x.getResourceBundle().getText('BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG','frameRate'),{duration:1000});}if(u.getProperty("/config/defaultConstraints/video/zoom")!==undefined){delete u.getProperty("/config/defaultConstraints/video").zoom;}if(typeof z1==="number"&&z1>0){u.setProperty("/config/defaultConstraints/video/zoom",z1);}else if(typeof z1!=='undefined'){M.show(x.getResourceBundle().getText('BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG','zoom'),{duration:1000});}u.setProperty("/scanDialog/keepCameraScan",A1);u.setProperty("/scanDialog/disableBarcodeInputDialog",B1);u.checkUpdate(true);if(u1()){L.debug("BarcodeScanner.scan: Zebra EB is available, use it to scan barcode.");i1();}else if(K("Cordova")){L.debug("BarcodeScanner.scan: Cordova is available, use it to scan barcode.");j1();}else{L.debug("BarcodeScanner.scan: both of Zebra EB and Cordova are NOT available, use ZXingCPP to scan barcode.");k1();}};
k.closeScanDialog=function(){if(S){S.close();S.fireAfterClose();u.setProperty("/scanDialog/scanningStartTime",0);u.setProperty("/scanDialog/onLiveUpdate",null);}u.setProperty("/bReady",true);u.checkUpdate(true);};
k.getStatusModel=function(){return w;};
k.getScanAPIInfo=function(){return F();};
k.setScanAPIInfo=function(e){if(!e){L.error("BarcodeScanner.setScanAPIInfo: scannerAPI is undefined.");return false;}if(F()!==e){var i=u.getProperty("/apis/"+e);if(!i){L.error("BarcodeScanner.scan: The scanner API '"+e+"' doesn't exist, will use current scanner API '"+u.getProperty("/apis/"+F()+"/description")+"' to scan the barcode.");return false;}else if(e==="ZXingCPP"){if(N(e)){L.error("BarcodeScanner.scan: The scanner API '"+e+"' is unavailable, will use current scanner API '"+u.getProperty("/apis/"+F()+"/description")+"' to scan the barcode.");return false;}else{L.debug("BarcodeScanner.scan: Switch to scanner API '"+e+"' to scan the barcode.");G(e);return true;}}else if(!K(e)){L.error("BarcodeScanner.scan: The scanner API '"+e+"' is unavailable, will use current scanner API '"+u.getProperty("/apis/"+F()+"/description")+"' to scan the barcode.");return false;}else{L.debug("BarcodeScanner.scan: Switch to scanner API '"+e+"' to scan the barcode.");G(e);return true;}}else{L.debug("BarcodeScanner.setScanAPIInfo: '"+e+"' is already current scanner API. It need not to be changed.");return true;}};
k.setPhysicalScan=function(e){if(typeof e==="function"){u.setProperty("/callBackHandler/callBackFromSetPhysicalScan",true);u.setProperty("/callBackHandler/onFnSuccess",e);u.setProperty("/callBackHandler/onFnFail",e);if(h.os.android){q(document).on("visibilitychange",function(){if(document.visibilityState==='visible'){c1();t1();}});}else{C("ZebraEnterpriseBrowser");L.debug("BarcodeScanner.setPhysicalScan: Not Android device, Zebra Enterprise Browser plugin is unavailable!");}}else{L.debug("setPhysicalScan is failed.");}};
k.setConfig=function(e){if(typeof e==="object"&&Object.keys(e).length>0){var i=u.getProperty("/config");for(var v1 in e){if(i.hasOwnProperty(v1)){i[v1]=e[v1];if(u1()&&v1==="enableGS1Header"){u.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",false);EB.Barcode.disable(t1);}if(v1==="deviceId"){w.setProperty("/deviceId",e[v1]);}L.debug("The parameter("+v1+") has been changed.");}else{L.error("The parameter("+v1+") is unavailable.");}}u.setProperty("/config",i);}else{L.error("The options are not available.");}};
d1();return k;},true);
}
},"sap/ndc/library-preload"
);
//# sourceMappingURL=library-preload.js.map