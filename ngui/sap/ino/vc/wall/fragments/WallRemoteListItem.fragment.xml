<core:FragmentDefinition
    xmlns="sap.m"
    xmlns:core="sap.ui.core">
    <CustomListItem type="Active" class="sapInoWallRemoteListItem">
         <customData>
            <core:CustomData key="deletable" value="{= (${wallremote>/Offline} &amp;&amp; ${wall>ID} >= 0 &amp;&amp; !${wall>changed}) ? 'true' : 'false'}" writeToDom="true" />
        </customData>
		 	<HBox>
				<core:Icon size="2rem" color="{= (0 > ${wall>ID}) ? 'Neutral' : 'Default'}" src="{path : 'wall>WALL_ITEM_TYPE_CODE', formatter : '.formatter.correctIcon'}" class="sapInoWallRemoteListIcon sapMSLIImgIcon sapUiSmallMarginTopBottom" />
				<HBox justifyContent="SpaceBetween" width="100%">
    				<VBox width="{= ${view>/edit} ? '7.9rem' : '10.8rem'}" class="sapUiSmallMarginTopBottom" >
    					<Label class="sapMSLITitle" text="{path : 'wall>WALL_ITEM_TYPE_CODE', formatter : '.formatter.correctTitle'}"/>
    					<Label text="{path : 'wall>CONTENT', formatter : '.formatter.correctContent'}"/>
    				</VBox>
    				<HBox width="5rem" justifyContent="SpaceBetween" class="sapUiSmallMarginBegin sapUiSmallMarginTopBottom">
    				    <Label class="sapInoWallRemoteStateText" visible="{= ${wallremote>/Offline} &amp;&amp; (0 > ${wall>ID})}" text="{i18n>WALL_REMOTE_LIST_ITEM_LOCAL}"/>
    					<Button visible="{= ${wallremote>/Offline} &amp;&amp; (${wall>changed} ||  0 > ${wall>ID})}" press="onActivateItem" class="sapInoWallRemotePublishButton" type="Transparent" icon="sap-icon://sys-enter" />
    				</HBox>
				</HBox>
			</HBox> 
		</CustomListItem>
</core:FragmentDefinition>